function [ tau_C_plus, tau_C_minus ] = carleybounds( h_XY )
%CARLEYBOUNDS - computes the carley bounds for a given discrete PMF
% Inputs:
%  h_XY - a contingency table generated of the format generated by 
%         gencontingencytable
% Outputs:
%  tau_C_plus - the maximum value of concordance that can be reached by 
%               this discrete distribution
%  tau_C_minus - the minimum value of concordance that can be reached by
%               this discrete distribution
%  
% NOTE: See "A Primer on Copulas for Count Data" by Genest and Neslehova
%       for more information on Carley bounds.
%**************************************************************************
%* 
%* Copyright (C) 2016  Kiran Karra <kiran.karra@gmail.com>
%*
%* This program is free software: you can redistribute it and/or modify
%* it under the terms of the GNU General Public License as published by
%* the Free Software Foundation, either version 3 of the License, or
%* (at your option) any later version.
%*
%* This program is distributed in the hope that it will be useful,
%* but WITHOUT ANY WARRANTY; without even the implied warranty of
%* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%* GNU General Public License for more details.
%*
%* You should have received a copy of the GNU General Public License
%* along with this program.  If not, see <http://www.gnu.org/licenses/>.
%* 
%**************************************************************************

[numX, numY] = size(h_XY);

% calculate from Proposition 4 in referenced paper above in comments
tau_C_minus = 0;
tau_C_plus  = 0;

for ii=1:numX
    for jj=1:numY
        for kk=1:ii-1
            for ll=1:jj-1
                tau_C_minus = tau_C_minus + ( h_XY(ii,jj)*h_XY(kk,ll) );
            end
        end
    end
end
tau_C_minus = -1 + 4*tau_C_minus;

for ii=1:numX
    for jj=1:numY
        for kk=1:ii-1
            for ll=jj+1:numY
                tau_C_plus = tau_C_plus + ( h_XY(ii,jj)*h_XY(kk,ll) );
            end
        end
    end
end
tau_C_plus = 1 - 4*tau_C_plus;